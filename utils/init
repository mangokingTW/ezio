#!/usr/bin/ash

udevd_running=0
mount_handler=default_mount_handler
init=/sbin/init
rd_logmask=0

. /init_functions

mount_setup

# parse the kernel command line
parse_cmdline </proc/cmdline

# setup logging as early as possible

for d in ${disablehooks//,/ }; do
    [ -e "/hooks/$d" ] && chmod 644 "/hooks/$d"
done

. /config

run_hookfunctions 'run_earlyhook' 'early hook' $EARLYHOOKS

if [ -n "$earlymodules$MODULES" ]; then
    modprobe -qab ${earlymodules//,/ } $MODULES
fi

run_hookfunctions 'run_hook' 'hook' $HOOKS

# honor the old behavior of break=y as a synonym for break=premount
#echo ":: Pre-mount break requested, type 'exit' to resume operation"
#launch_interactive_shell


rescue_shell() {
	echo "Something went wrong. Dropping to a shell."
	exec sh
}

# Chain to real filesystem
# exec run-init ${drop_caps} ${rootmnt} ${init} "$@" ${recovery:+--startup-event=recovery} <${rootmnt}/dev/console >${rootmnt}/dev/console 2>&1

# before init
# set up interface
for interface in $(ls /sys/class/net/); do
	busybox ifconfig $interface up
done

# if pxelinux
if [ -n "${BOOTIF}" ]; then
	mac=$(echo "${BOOTIF}" | sed 's/01-//' | sed 's/-/:/g')
	for dev in /sys/class/net/* ; do
		if [ -f "$dev/address" ]; then
			dev_mac=$(cat $dev/address)
			if [ "$dev_mac" = "$mac" ]; then
				DEVICE=$(echo "$dev" | sed 's|.*/||')
				break
			fi
		fi
	done

	busybox ifconfig $DEVICE up
	busybox udhcpc -i $DEVICE -s /bin/udhcpc.sh
else
	echo "You should configure network yourself. 'busybox udhcpc' will help you."
fi

/bin/startup.sh
poweroff
